{"version":3,"sources":["estrategias/lancamento-coberto-simples.js","estrategias/lancamento-coberto-alavancado.js","App.js","reportWebVitals.js","index.js"],"names":["LancamentoCobertoSimples","React","useState","tickerPrice","setTickerPrice","bestTickerPrice","setBestTickerPrice","callPrice","setCallPrice","callStrike","setCallStrike","putPrice","setPutPrice","putStrike","setPutStrike","gainPerOption","Math","max","gainPerCent","parseFloat","bestGain","bestGainPerCent","newPM","newBestPM","className","style","width","onChange","e","console","log","target","value","disabled","toFixed","LancamentoCobertoAlavancado","tickerQnt","setTickerQnt","puts","setPuts","valueSpentInPuts","map","p","price","qnt","reduce","a","b","valueToByPuts","gain","strike","changePutsConfig","idx","attr","newVal","newPuts","color","marginBottom","onClick","App","strategyName","setStrategyName","cursor","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4f3f56e8.chunk.js","sourcesContent":["import React from 'react';\n\nexport default function LancamentoCobertoSimples() {\n    const [tickerPrice,setTickerPrice] = React.useState(1);\n    const [bestTickerPrice,setBestTickerPrice] = React.useState(0);\n\n    const [callPrice,setCallPrice] = React.useState(0);\n    const [callStrike,setCallStrike] = React.useState(0);\n\n    const [putPrice,setPutPrice] = React.useState(0);\n    const [putStrike,setPutStrike] = React.useState(0);\n\n    const gainPerOption = Math.max((callStrike - tickerPrice), 0) + (callPrice - putPrice);\n    const gainPerCent = gainPerOption / parseFloat(tickerPrice);\n\n    const bestGain = gainPerOption + (putStrike - bestTickerPrice);\n    const bestGainPerCent = bestGain / parseFloat(tickerPrice);\n\n    const newPM = tickerPrice - gainPerOption;\n    const newBestPM = tickerPrice - bestGain;\n    \n    return (<div>\n        <h3>Lançamento Coberto Simples</h3>\n        <p>O raciononal dessa estratégia é comprar um ativo e vender uma opção de Compra (CALL) no preço (Strike) mais próximo do valor pelo ativo. \n        Além disso, se faz uma proteção do ativo comprando uma opção de Venda (PUT) em um valor a baixo do Strike da CALL. Assim, você ganha o valor \n        da diferença entre a CALL e a PUT.</p>\n\n        <p>Por exemplo:</p>\n\n        <p>Compra 10 BOVA11 a R$114.90. Vende 10 BOVAB86 (Strike R$115.00) no valor de R$2.39. Compra 10 BOVAN114 (Strike R$114.00) no valor R$1.99.</p>\n        \n        <p>Assim, voce ganha pelo menos R$4.00 na operação com baixissimo risco.</p>\n\n        <p><b>O risco é de no venciomento do contrato o valor de mercado do Ativo estar a um preço entre o Strike da sua CALL e sua PUT. \n        Dessa forma, você fica com o ativo valendo menos do que você pagou. No exemplo acima, seria com BOVA11 fechando o contrato a R$114,10. \n        Entretanto como voce pode reexecutar a estratégio no mês seguinte, ainda terá opções (CALL) com Strike de R$115,00 valendo bem.</b></p>\n\n        <div className=\"divider py-1 bg-dark\"></div>\n\n        <p style={{width:'100%'}}> <h5 className='text-center'>Calculadora de Viabilidade <br /><sub>*Usar ponto (.) para casas decimais</sub></h5> </p>\n\n\n        <div className='container-fluid'>\n            <div className='row'>\n                <div className='col-sm-6'>\n                    <p>Ativo: <input style={{width: '120px'}} /> </p>\n                    <p>Valor: <input style={{width: '90px'}} onChange={(e)=>{console.log(e.target.value); setTickerPrice(e.target.value)}}/> </p> <br/><br/>\n\n                    <p>CALL: <input style={{width: '120px'}} /> </p> \n                    <p>Valor: <input style={{width: '90px'}} onChange={(e)=>{setCallPrice(e.target.value)}}/> </p> \n                    <p>Strike: <input style={{width: '90px'}} onChange={(e)=>{setCallStrike(e.target.value)}} /> </p><br/><br/>\n                    \n                    <p>PUT: <input style={{width: '120px'}} /> </p>\n                    <p>Valor: <input style={{width: '90px'}} onChange={(e)=>{setPutPrice(e.target.value)}}/> </p> \n                    <p>Strike: <input style={{width: '90px'}} onChange={(e)=>{setPutStrike(e.target.value)}} /> </p>\n                </div>\n\n                <div className='col-sm-6'>\n                    <div className='row'>\n                        <p style={{width:'100%'}} className='text-center'><b>MELHOR CASO</b></p>\n                        <div className='col-sm-6'>\n                            <p>Lucro</p>\n                            <p><input disabled style={{width: '90px'}} value={bestGain?bestGain.toFixed(2):0 } /></p>\n                            <p>Lucro (%)</p>\n                            <p><input disabled style={{width: '90px'}} value={bestGainPerCent?(bestGainPerCent*100).toFixed(1):0 } /></p>\n                            <p>Preço Médio Discontando Lucro</p>\n                            <p><input disabled style={{width: '90px'}} value={newBestPM?newBestPM.toFixed(2):0} /></p>\n                        </div>\n\n                        <div className='col-sm-6'> \n                            <p>Ativo cai demais até o fechamento. Raramente vai acontecer.</p>\n                            <p>Estimativa do preço final: <br /><input style={{width: '90px'}} onChange={(e)=>{setBestTickerPrice(e.target.value)}}/> </p>\n                        </div>\n                    </div>\n\n                    <div className='row'>\n                        <p style={{width:'100%'}} className='text-center'><b>CASO MÉDIO</b></p>\n                        <div className='col-sm-6'>\n                            <p>Lucro</p>\n                            <p><input disabled style={{width: '90px'}} value={gainPerOption?gainPerOption.toFixed(2):0}/></p>\n                            <p>Lucro (%)</p>\n                            <p><input disabled style={{width: '90px'}} value={gainPerCent?(gainPerCent*100).toFixed(1):0}/></p>\n                        </div>\n\n                        <div className='col-sm-6'>\n                            <p>Ativo sobe. Você vai precisar aportar uma grana para recomprar o ativo no novo preço pra executar a estratégia novamente.</p>\n                        </div>\n                    </div>\n\n                    <div className='row'>\n                        <p style={{width:'100%'}} className='text-center'><b>PIOR CASO</b></p>\n                        <div className='col-sm-6'>\n                            <p>Preço Médio Discontando Lucro</p>\n                            <p><input disabled style={{width: '90px'}} value={newPM?newPM.toFixed(2):0} /></p>\n                        </div>\n                        \n                        <div className='col-sm-6'>\n                            <p>Ativo fica entre a CALL e a PUT.</p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        \n    </div>);\n}\n","import React from 'react';\n\nfunction LancamentoCobertoAlavancado() {\n    const [tickerPrice,setTickerPrice] = React.useState(1);\n    const [tickerQnt,setTickerQnt] = React.useState(1);\n    const [bestTickerPrice,setBestTickerPrice] = React.useState(0);\n\n    const [callPrice,setCallPrice] = React.useState(0);\n    const [callStrike,setCallStrike] = React.useState(0);\n\n    const [puts,setPuts] = React.useState([{'name': '','price': 0, 'strike': 0, 'qnt': 0}]);\n    const valueSpentInPuts = puts.map(p=>p.price*p.qnt).reduce((a,b)=>a+b);\n    const valueToByPuts = ((callPrice/2)*tickerQnt) - valueSpentInPuts;\n    \n\n    const gain = (Math.max((callStrike - tickerPrice), 0)*tickerQnt) + ((callPrice*tickerQnt) - valueSpentInPuts);\n    const gainPerCent = gain / parseFloat(tickerPrice);\n\n    const bestGain = gain +  puts.map(p=> Math.max(p.strike-bestTickerPrice, 0)*p.qnt).reduce((a,b)=>a+b);\n    const bestGainPerCent = bestGain / parseFloat(tickerPrice);\n\n    const newPM = tickerPrice - gain;\n    const newBestPM = tickerPrice - bestGain;\n\n    const changePutsConfig = (idx, attr, newVal) => {\n        const newPuts = [...puts];\n        newPuts[idx][attr] = newVal;\n        setPuts(newPuts);\n    };\n\n    return (<div>\n        <h3>Lançamento Coberto Alavancado</h3>\n\n        <p>O raciononal dessa estratégia é comprar um ativo e vender uma opção de Compra (CALL) no preço (Strike) mais próximo do valor pelo ativo. \n        Mas deferente do lançamento coberto simples, se faz uma proteção do ativo comprando mais de uma opção de Venda (PUT) em um valor bem a baixo\n        do Strike da CALL. <b>O recomendado é comprar PUTs com 50% do lucro com a venda da CALL. Assim voce ganha 50% do venda da CALL assumindo\n        mais riscos.</b></p>\n\n        <p>Por exemplo:</p>\n\n        <p>Compra 10 BOVA11 a R$114.90. Vende 10 BOVAB86 (Strike R$115.00) no valor de R$2.39. Compra 20 BOVAN103 (Strike R$106.00) no valor R$0.49.</p>\n        \n        <p>Assim, voce ganha pelo menos R$14.10 na operação com mais riscos.</p>\n\n        <p><b>O risco é de no venciomento do contrato o valor de mercado do Ativo estar a um preço entre o Strike da sua CALL e sua PUT. \n        Dessa forma, você fica com o ativo valendo menos do que você pagou. No exemplo acima, seria com BOVA11 fechando o contrato a R$107.00</b></p>\n    \n\n        <div className=\"divider py-1 bg-dark\"></div>\n\n        <p style={{width:'100%'}}> <h5 className='text-center'>Calculadora de Viabilidade <br /><sub>*Usar ponto (.) para casas decimais</sub></h5> </p>\n\n\n        <div className='container-fluid'>\n            <div className='row'>\n                <div className='col-sm-6'>\n                    <p>Ativo: <input style={{width: '120px'}} /> </p>\n                    <p>Valor: <input style={{width: '90px'}} onChange={(e)=>{setTickerPrice(e.target.value)}}/> </p>\n                    <p>Quantidade: <input style={{width: '90px'}} onChange={(e)=>{setTickerQnt(e.target.value)}}/> </p> <br/><br/>\n\n                    <p>CALL: <input style={{width: '120px'}} /> </p> \n                    <p>Quantidade: <input disabled style={{width: '90px'}} value={tickerQnt}/> </p>\n                    <p>Valor: <input style={{width: '90px'}} onChange={(e)=>{setCallPrice(e.target.value)}}/> </p> \n                    <p>Strike: <input style={{width: '90px'}} onChange={(e)=>{setCallStrike(e.target.value)}} /> </p><br/><br/>\n                    <p style={{color: valueToByPuts<0?'red':'blue'}}>Você ainda pode gastar R${valueToByPuts.toFixed(2)} em PUTs.</p>\n                    {puts.map( (p, idx) => <div style={{marginBottom: '45px'}} key={idx}>\n                        <p>PUT: <input style={{width: '120px'}} onChange={(e)=>{changePutsConfig(idx, 'name', e.target.value)}}/> </p>\n                        <p>Quantidade: <input style={{width: '90px'}} onChange={(e)=>{changePutsConfig(idx, 'qnt', e.target.value)}}/> </p> \n                        <p>Valor: <input style={{width: '90px'}} onChange={(e)=>{changePutsConfig(idx, 'price', e.target.value)}}/> </p> \n                        <p>Strike: <input style={{width: '90px'}} onChange={(e)=>{changePutsConfig(idx, 'strike', e.target.value)}} /> </p>\n                    </div>)}\n                    <p><button className='btn btn-primary' onClick={()=>setPuts([...puts, {'name': '','price': 0, 'strike': 0, 'qnt': 0}])}>Adicionar PUT</button></p>\n                </div>\n\n                <div className='col-sm-6'>\n                    <div className='row'>\n                        <p style={{width:'100%'}} className='text-center'><b>MELHOR CASO</b></p>\n                        <div className='col-sm-6'>\n                            <p>Lucro</p>\n                            <p><input disabled style={{width: '90px'}} value={bestGain?bestGain.toFixed(2):0 } /></p>\n                            <p>Lucro (%)</p>\n                            <p><input disabled style={{width: '90px'}} value={bestGainPerCent?(bestGainPerCent*100).toFixed(1):0 } /></p>\n                            <p>Preço Médio Discontando Lucro</p>\n                            <p><input disabled style={{width: '90px'}} value={newBestPM?newBestPM.toFixed(2):0} /></p>\n                        </div>\n\n                        <div className='col-sm-6'> \n                            <p>Ativo cai demais até o fechamento. Raramente vai acontecer.</p>\n                            <p>Estimativa do preço final: <br /><input style={{width: '90px'}} onChange={(e)=>{setBestTickerPrice(e.target.value)}}/> </p>\n                        </div>\n                    </div>\n\n                    <div className='row'>\n                        <p style={{width:'100%'}} className='text-center'><b>CASO MÉDIO</b></p>\n                        <div className='col-sm-6'>\n                            <p>Lucro</p>\n                            <p><input disabled style={{width: '90px'}} value={gain?gain.toFixed(2):0}/></p>\n                            <p>Lucro (%)</p>\n                            <p><input disabled style={{width: '90px'}} value={gainPerCent?(gainPerCent*100).toFixed(1):0}/></p>\n                        </div>\n\n                        <div className='col-sm-6'>\n                            <p>Ativo sobe. Você vai precisar aportar uma grana para recomprar o ativo no novo preço pra executar a estratégia novamente.</p>\n                        </div>\n                    </div>\n\n                    <div className='row'>\n                        <p style={{width:'100%'}} className='text-center'><b>PIOR CASO</b></p>\n                        <div className='col-sm-6'>\n                            <p>Preço Médio Discontando Lucro</p>\n                            <p><input disabled style={{width: '90px'}} value={newPM?newPM.toFixed(2):0} /></p>\n                        </div>\n                        \n                        <div className='col-sm-6'>\n                            <p>Ativo fica entre a CALL e a PUT.</p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>);\n}\n\nexport default LancamentoCobertoAlavancado;","import React from 'react';\nimport LancamentoCobertoSimples from './estrategias/lancamento-coberto-simples';\nimport LancamentoCobertoAlavancado from './estrategias/lancamento-coberto-alavancado';\n\n\nfunction App() {\n  const [strategyName,setStrategyName] = React.useState('LancamentoCobertoSimples');\n  \n  return (\n    <div className=\"container\">\n      <div className=\"row header\">\n        <p style={{width: '100%'}}>\n          <h1 className=\"text-center\">Estudo de Opções no Sistema Diamente do Leo Dutra</h1>\n        </p>\n      </div>\n\n      <div className=\"row\">\n        <div className=\"col-sm-2\">\n          <ul className=\"list-group\">\n            <li style={{cursor: 'pointer'}} \n              className={strategyName==='LancamentoCobertoSimples'?'list-group-item active':'list-group-item'} \n              onClick={()=>{setStrategyName('LancamentoCobertoSimples')}}>\n                Lançamento Coberto Simples\n            </li>\n\n            <li style={{cursor: 'pointer'}} \n              className={strategyName==='LancamentoCobertoAlavancado'?'list-group-item active':'list-group-item'} \n              onClick={()=>{setStrategyName('LancamentoCobertoAlavancado')}}>\n                Lançamento Coberto Alavancado\n            </li>\n          </ul>\n        </div>\n      \n        <div className=\"col-sm-10\">\n          {strategyName==='LancamentoCobertoSimples'? <LancamentoCobertoSimples />: <LancamentoCobertoAlavancado />}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}